name: assignment3

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build the Docker image
        run: docker-compose -f books-service/docker-compose.yml build

      - name: Save build result to log.txt
        run: echo "image successfully built" > log.txt
        if: success()

      - name: Upload build log
        uses: actions/upload-artifact@v2
        with:
          name: build-log
          path: log.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Docker Compose
        run: docker-compose -f books-service/docker-compose.yml up -d

      - name: Run pytest tests
        run: |
          docker exec -it books-service_web_1 pytest -v tests/assn3_tests.py | tee assn3_test_results.txt

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: assn3_test_results.txt

  query:
    runs-on: ubuntu-latest
    needs: test
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Docker Compose
        run: docker-compose -f books-service/docker-compose.yml up -d

      - name: Run queries and save output
        run: |
          while IFS= read -r query; do
            response=$(curl -s "http://localhost:5001/books$query")
            echo "query: $query" >> response.txt
            echo "response: $response" >> response.txt
          done < query.txt

      - name: Upload query results
        uses: actions/upload-artifact@v2
        with:
          name: query-results
          path: response.txt

