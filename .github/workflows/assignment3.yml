name: Build, Test, and Query

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image and export to tar file
        uses: docker/build-push-action@v5
        with:
          context: ./books-service
          file: ./books-service/Dockerfile
          tags: books-service:latest
          outputs: type=docker,dest=/tmp/books-service.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: books-service-image
          path: /tmp/books-service.tar

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: books-service-image
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/books-service.tar

      - name: Set up Docker Compose
        run: docker compose -f docker-compose.yml up -d

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests pymongo

      - name: Run tests
        run: pytest -v books-service/tests/assn3_tests.py > assn3_test_results.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: assn3_test_results.txt

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: books-service-image
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/books-service.tar

      - name: Start Docker Compose
        run: docker compose -f docker-compose.yml up -d

      - name: Execute POST and GET requests
        run: |
          curl -X POST "http://localhost:5001/books" -H "Content-Type: application/json" -d '{"title": "Example Book", "ISBN": "1234567890", "genre": "Fiction"}'
          curl "http://localhost:5001/books"

      - name: Upload query results
        run: echo "Add logic to generate output file here" # Placeholder for actual command

      - name: Shutdown Docker Compose
        run: docker compose down
